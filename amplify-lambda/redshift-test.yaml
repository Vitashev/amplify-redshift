AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Resources:
  redshifttest:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 256
      Timeout: 15
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 1000
      Environment:
        Variables:
          SecretId: redshift
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Tags:
        auto-delete: 'no'
      VpcConfig:
        SecurityGroupIds:
          - sg-059e0dff7e2a3eb7f
        SubnetIds:
          - subnet-06b00f21a274907c4
          - subnet-0774fe52d4d3e0e22
          - subnet-019b98b1bf45e90c7
          - subnet-013512ca3ef5cbe57
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource: arn:aws:logs:us-west-2:020386288641:*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - >-
                arn:aws:logs:us-west-2:020386288641:log-group:/aws/lambda/redshift-test:*
          - Action:
              - redshift:*
              - redshift-serverless:*
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - ec2:DescribeInternetGateways
              - sns:CreateTopic
              - sns:Get*
              - sns:List*
              - cloudwatch:Describe*
              - cloudwatch:Get*
              - cloudwatch:List*
              - cloudwatch:PutMetricAlarm
              - cloudwatch:EnableAlarmActions
              - cloudwatch:DisableAlarmActions
              - tag:GetResources
              - tag:UntagResources
              - tag:GetTagValues
              - tag:GetTagKeys
              - tag:TagResources
            Effect: Allow
            Resource: '*'
          - Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource: >-
              arn:aws:iam::*:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift
            Condition:
              StringLike:
                iam:AWSServiceName: redshift.amazonaws.com
          - Sid: DataAPIPermissions
            Action:
              - redshift-data:ExecuteStatement
              - redshift-data:CancelStatement
              - redshift-data:ListStatements
              - redshift-data:GetStatementResult
              - redshift-data:DescribeStatement
              - redshift-data:ListDatabases
              - redshift-data:ListSchemas
              - redshift-data:ListTables
              - redshift-data:DescribeTable
            Effect: Allow
            Resource: '*'
          - Sid: SecretsManagerListPermissions
            Action:
              - secretsmanager:ListSecrets
            Effect: Allow
            Resource: '*'
          - Sid: SecretsManagerCreateGetPermissions
            Action:
              - secretsmanager:CreateSecret
              - secretsmanager:GetSecretValue
              - secretsmanager:TagResource
            Effect: Allow
            Resource: '*'
            Condition:
              StringLike:
                secretsmanager:ResourceTag/RedshiftDataFullAccess: '*'
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              - ec2:AssignPrivateIpAddresses
              - ec2:UnassignPrivateIpAddresses
            Resource: '*'
          - Effect: Allow
            Action:
              - secretsmanager:*
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:DescribeStackResource
              - cloudformation:DescribeStacks
              - cloudformation:ExecuteChangeSet
              - docdb-elastic:GetCluster
              - docdb-elastic:ListClusters
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - kms:DescribeKey
              - kms:ListAliases
              - kms:ListKeys
              - lambda:ListFunctions
              - rds:DescribeDBClusters
              - rds:DescribeDBInstances
              - redshift:DescribeClusters
              - tag:GetResources
            Resource: '*'
          - Effect: Allow
            Action:
              - lambda:AddPermission
              - lambda:CreateFunction
              - lambda:GetFunction
              - lambda:InvokeFunction
              - lambda:UpdateFunctionConfiguration
            Resource: arn:aws:lambda:*:*:function:SecretsManager*
          - Effect: Allow
            Action:
              - serverlessrepo:CreateCloudFormationChangeSet
              - serverlessrepo:GetApplication
            Resource: arn:aws:serverlessrepo:*:*:applications/SecretsManager*
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - arn:aws:s3:::awsserverlessrepo-changesets*
              - arn:aws:s3:::secrets-manager-rotation-apps-*/*
          - Sid: DataAPIPermissions
            Effect: Allow
            Action:
              - redshift-data:BatchExecuteStatement
              - redshift-data:ExecuteStatement
              - redshift-data:CancelStatement
              - redshift-data:ListStatements
              - redshift-data:GetStatementResult
              - redshift-data:DescribeStatement
              - redshift-data:ListDatabases
              - redshift-data:ListSchemas
              - redshift-data:ListTables
              - redshift-data:DescribeTable
            Resource: '*'
          - Sid: SecretsManagerPermissions
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: arn:aws:secretsmanager:*:*:secret:*
            Condition:
              StringLike:
                secretsmanager:ResourceTag/RedshiftDataFullAccess: '*'
          - Sid: GetCredentialsForAPIUser
            Effect: Allow
            Action:
              - redshift:GetClusterCredentials
            Resource:
              - arn:aws:redshift:*:*:dbname:*/*
              - arn:aws:redshift:*:*:dbuser:*/redshift_data_api_user
          - Sid: GetCredentialsWithFederatedIAMCredentials
            Effect: Allow
            Action:
              - redshift:GetClusterCredentialsWithIAM
            Resource: arn:aws:redshift:*:*:dbname:*/*
          - Sid: GetCredentialsForServerless
            Effect: Allow
            Action:
              - redshift-serverless:GetCredentials
            Resource: arn:aws:redshift-serverless:*:*:workgroup/*
            Condition:
              StringLike:
                aws:ResourceTag/RedshiftDataFullAccess: '*'
          - Sid: DenyCreateAPIUser
            Effect: Deny
            Action:
              - redshift:CreateClusterUser
            Resource:
              - arn:aws:redshift:*:*:dbuser:*/redshift_data_api_user
          - Sid: ServiceLinkedRole
            Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource: >-
              arn:aws:iam::*:role/aws-service-role/redshift-data.amazonaws.com/AWSServiceRoleForRedshift
            Condition:
              StringLike:
                iam:AWSServiceName: redshift-data.amazonaws.com
